How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    allowed me to see a typo

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Let's you see any changes made and gives you the ability to revert them

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro's you allows you to make changes and debug prior to rolling out changes for everyone. Cons it doesn't auto save and you might be working on slightly different versions of code or saving in the middle of editing resulting in non-working code.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because google auto saves so it treats files independently whereas the commit allows for saving files linked together to be saved together in the event of changes.

How can you use the commands git log and git diff to view the history of files?

    diff shows the difference between the two files line by line. Log shows file history (list of all changes) So you use log to find which versions you want to compare and diff to actually compare them.

How might using version control make you more confident to make changes that
could break something?

    Because it gives you the ability to revert your changes and compare what's been modified. Also allows you to jump back and forth between commits to find out when a bug was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

    finishing the udacity course.
